/*
Develop a Program in C for the following Stack Applications
a. Evaluation of Suffix expression with single digit operands and operators: +, -, *, /, %,^
b. Solving Tower of Hanoi problem with n disks
*/

//A. Evaluation of Suffix expression with single digit operands and operators: +, -, *, /, %,^

#include<stdio.h>
#include<math.h>
#include<string.h>

double compute(char symbol, double op1, double op2) {
    switch(symbol) {
        case '+': return op1 + op2;
        case '-': return op1 - op2;
        case '*': return op1 * op2;
        case '/': return op1 / op2;
        case '$':
        case '^': return pow(op1, op2);
        default: return 0;
    }
}

void main() {
    double s[20], res, op1, op2;
    int top, i;
    char postfix[20], symbol;

    printf("\nEnter the postfix expression:\n");
    fgets(postfix, sizeof(postfix), stdin);

    top = -1;

    for(i = 0; i < strlen(postfix); i++) {
        symbol = postfix[i];
        if(isdigit(symbol))
            s[++top] = symbol - '0';
        else {
            op2 = s[top--];
            op1 = s[top--];
            res = compute(symbol, op1, op2);
            s[++top] = res;
        }
    }

    res = s[top--];
    printf("\nThe result is: %f\n", res);
}

/*
Sample Output1:

Enter the postfix expression:
23+7*

The result is: 35.000000

Sample Output2:

Enter the postfix expression:
53*82/+

The result is: 17.000000


*/

//B. Solving Tower of Hanoi problem with n disks

#include<stdio.h>

void tower(int n, int source, int temp, int destination) {
    if(n == 0)
        return;

    tower(n - 1, source, destination, temp);
    printf("\nMove disc %d from %c to %c", n, source, destination);
    tower(n - 1, temp, source, destination);
}

void main() {
    int n;

    printf("\nEnter the number of discs: \n");
    scanf("%d", &n);

    tower(n, 'A', 'B', 'C');
    printf("\n\nTotal Number of moves are: %d", (int)pow(2, n) - 1);
}

/*
Sample Output:

Enter the number of discs: 
3

Move disc 1 from A to C
Move disc 2 from A to B
Move disc 1 from C to B
Move disc 3 from A to C
Move disc 1 from B to A
Move disc 2 from B to C
Move disc 1 from A to C

Total Number of moves are: 7

*/
